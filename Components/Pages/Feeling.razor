@page "/feeling"
@using MeTenTenMaui.Models
@using MeTenTenMaui.Services
@inject IFeelingExampleService FeelingExampleService

<PageTitle>느낌 표현 - MeTenTen</PageTitle>

<BreadcrumbNavigator CurrentPageTitle="느낌 표현" />

<div class="feeling-examples-container">
    <div class="feeling-header">
        <h1>😊 느낌 표현 예시</h1>
        <p class="feeling-subtitle">다양한 감정을 표현하는 방법을 참고해보세요</p>
    </div>

    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <!-- 기쁨 섹션 -->
        <div class="category-section">
            <div class="category-header" @onclick="@(() => ToggleCategory(CategoryJoy))">
                <h2>😊 기쁨</h2>
                <span class="toggle-icon">@(expandedCategories.Contains(CategoryJoy) ? "▼" : "▶")</span>
            </div>
            
            @if (expandedCategories.Contains(CategoryJoy))
            {
                <div class="category-content">
                    <button class="btn btn-sm btn-primary mb-3" @onclick="@(() => ShowAddModal(CategoryJoy))">
                        <span class="bi bi-plus-circle"></span> 예시 추가
                    </button>
                    
                    @foreach (var example in joyExamples)
                    {
                        <div class="example-item">
                            <div class="example-text">
                                <strong>@example.SubCategory</strong> : @example.Description
                            </div>
                            @if (!example.IsDefault)
                            {
                                <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteExample(example.Id)">
                                    <span class="bi bi-trash"></span>
                                </button>
                            }
                        </div>
                    }
                </div>
            }
        </div>

        <!-- 두려움 섹션 -->
        <div class="category-section">
            <div class="category-header" @onclick="@(() => ToggleCategory(CategoryFear))">
                <h2>😰 두려움</h2>
                <span class="toggle-icon">@(expandedCategories.Contains(CategoryFear) ? "▼" : "▶")</span>
            </div>
            
            @if (expandedCategories.Contains(CategoryFear))
            {
                <div class="category-content">
                    <button class="btn btn-sm btn-primary mb-3" @onclick="@(() => ShowAddModal(CategoryFear))">
                        <span class="bi bi-plus-circle"></span> 예시 추가
                    </button>
                    
                    @foreach (var example in fearExamples)
                    {
                        <div class="example-item">
                            <div class="example-text">
                                <strong>@example.SubCategory</strong> : @example.Description
                            </div>
                            @if (!example.IsDefault)
                            {
                                <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteExample(example.Id)">
                                    <span class="bi bi-trash"></span>
                                </button>
                            }
                        </div>
                    }
                </div>
            }
        </div>

        <!-- 분노 섹션 -->
        <div class="category-section">
            <div class="category-header" @onclick="@(() => ToggleCategory(CategoryAnger))">
                <h2>😠 분노</h2>
                <span class="toggle-icon">@(expandedCategories.Contains(CategoryAnger) ? "▼" : "▶")</span>
            </div>
            
            @if (expandedCategories.Contains(CategoryAnger))
            {
                <div class="category-content">
                    <button class="btn btn-sm btn-primary mb-3" @onclick="@(() => ShowAddModal(CategoryAnger))">
                        <span class="bi bi-plus-circle"></span> 예시 추가
                    </button>
                    
                    @foreach (var example in angerExamples)
                    {
                        <div class="example-item">
                            <div class="example-text">
                                <strong>@example.SubCategory</strong> : @example.Description
                            </div>
                            @if (!example.IsDefault)
                            {
                                <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteExample(example.Id)">
                                    <span class="bi bi-trash"></span>
                                </button>
                            }
                        </div>
                    }
                </div>
            }
        </div>

        <!-- 슬픔 섹션 -->
        <div class="category-section">
            <div class="category-header" @onclick="@(() => ToggleCategory(CategorySadness))">
                <h2>😢 슬픔</h2>
                <span class="toggle-icon">@(expandedCategories.Contains(CategorySadness) ? "▼" : "▶")</span>
            </div>
            
            @if (expandedCategories.Contains(CategorySadness))
            {
                <div class="category-content">
                    <button class="btn btn-sm btn-primary mb-3" @onclick="@(() => ShowAddModal(CategorySadness))">
                        <span class="bi bi-plus-circle"></span> 예시 추가
                    </button>
                    
                    @foreach (var example in sadnessExamples)
                    {
                        <div class="example-item">
                            <div class="example-text">
                                <strong>@example.SubCategory</strong> : @example.Description
                            </div>
                            @if (!example.IsDefault)
                            {
                                <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteExample(example.Id)">
                                    <span class="bi bi-trash"></span>
                                </button>
                            }
                        </div>
                    }
                </div>
            }
        </div>
    }
</div>

<!-- 예시 추가 모달 -->
@if (showAddModal)
{
    <div class="modal-overlay" @onclick="CloseAddModal">
        <div class="modal-content" @onclick:stopPropagation="true">
            <div class="modal-header">
                <h3>@selectedCategory 예시 추가</h3>
                <button class="btn-close" @onclick="CloseAddModal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="subCategory">하위 카테고리 *</label>
                    <input type="text" id="subCategory" @bind="newExample.SubCategory" 
                           class="form-control" placeholder="예: 가벼운, 개운한 등" />
                </div>
                
                <div class="form-group">
                    <label for="description">설명 *</label>
                    <textarea id="description" @bind="newExample.Description" 
                              class="form-control" rows="4"
                              placeholder="예: 새털처럼 빈 기방을 들 때처럼, 힘든 숙제를 다 마쳤을 때처럼"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" @onclick="CloseAddModal">취소</button>
                <button class="btn btn-primary" @onclick="AddExample">추가</button>
            </div>
        </div>
    </div>
}

@code {
    private const string CategoryJoy = "기쁨";
    private const string CategoryFear = "두려움";
    private const string CategoryAnger = "분노";
    private const string CategorySadness = "슬픔";
    
    private List<FeelingExample> allExamples = new();
    private List<FeelingExample> joyExamples = new();
    private List<FeelingExample> fearExamples = new();
    private List<FeelingExample> angerExamples = new();
    private List<FeelingExample> sadnessExamples = new();
    
    private HashSet<string> expandedCategories = new() { CategoryJoy }; // 기쁨은 기본으로 펼쳐짐
    private bool showAddModal = false;
    private bool isLoading = true;
    private string selectedCategory = "";
    private FeelingExample newExample = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadExamples();
    }

    private async Task LoadExamples()
    {
        try
        {
            isLoading = true;
            allExamples = await FeelingExampleService.GetAllExamplesAsync();
            
            joyExamples = allExamples.Where(e => e.Category == CategoryJoy).ToList();
            fearExamples = allExamples.Where(e => e.Category == CategoryFear).ToList();
            angerExamples = allExamples.Where(e => e.Category == CategoryAnger).ToList();
            sadnessExamples = allExamples.Where(e => e.Category == CategorySadness).ToList();
        }
        catch (Exception ex)
        {
            // 에러 처리
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ToggleCategory(string category)
    {
        if (expandedCategories.Contains(category))
        {
            expandedCategories.Remove(category);
        }
        else
        {
            expandedCategories.Add(category);
        }
    }

    private void ShowAddModal(string category)
    {
        selectedCategory = category;
        newExample = new FeelingExample
        {
            Category = category
        };
        showAddModal = true;
    }

    private async Task AddExample()
    {
        if (string.IsNullOrWhiteSpace(newExample.SubCategory) || 
            string.IsNullOrWhiteSpace(newExample.Description))
        {
            return;
        }

        try
        {
            await FeelingExampleService.AddExampleAsync(newExample);
            await LoadExamples();
            CloseAddModal();
        }
        catch (Exception ex)
        {
            // 에러 처리
        }
    }

    private async Task DeleteExample(int id)
    {
        try
        {
            await FeelingExampleService.DeleteExampleAsync(id);
            await LoadExamples();
        }
        catch (Exception ex)
        {
            // 에러 처리
        }
    }

    private void CloseAddModal()
    {
        showAddModal = false;
        newExample = new FeelingExample();
        selectedCategory = "";
    }
}
